apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: liveness-readiness-example
  name: test
  namespace: default
spec:
  replicas: 2
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: liveness-readiness-example
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: liveness-readiness-example
    spec:
      containers:
        - env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          image: geekgonecrazy/liveness-readiness-example:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /health?type=liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: main
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /health?type=readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            requests:
              memory: 200Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    traefik.backend.circuitbreaker: NetworkErrorRatio() > 0.5
    traefik.backend.loadbalancer.method: drr
    traefik.ingress.kubernetes.io/affinity: "true"
  labels:
    app: liveness-readiness-example
  name: test
  namespace: default
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: liveness-readiness-example
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    #traefik.ingress.kubernetes.io/router.middlewares: saas-rc-auth-url@kubernetescrd
  name: test
  namespace: default
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: test
                port:
                  number: 8080
            path: /
            pathType: Prefix
